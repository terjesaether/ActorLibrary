@model ActorLibrary.Models.ActorViewModel

@{
    ViewBag.Title = "Details";
}


<h2>
    @Html.DisplayFor(model => model.Actor.FullName)
    @*@Html.ActionLink(" ", "Edit", "Home", new { id = Model.Actor.ActorId }, new { @class = "glyphicon glyphicon-pencil" })*@
    @Html.ActionLink("Legg til stemmeprøver", "AddAudioFiles", new { id = Model.Actor.ActorId }, new { @class = "btn btn-info" })
    @Html.ActionLink("Rediger", "Edit", new { id = Model.Actor.ActorId }, new { @class = "btn btn-info" })
</h2>
<div>

    <hr />
    <div class="row">
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Actor.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Actor.FirstName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Actor.LastName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Actor.LastName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Actor.BirthDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Actor.BirthDate)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Actor.Age)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Actor.Age) år.
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Actor.Mail)
                </dt>

                <dd>
                    <a href="mailto:@Model.Actor.Mail">@Model.Actor.Mail</a>

                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Actor.Phone)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Actor.Phone)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Actor.Address)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Actor.Address)
                </dd>


                <dt>
                    Kjønn:
                </dt>

                <dd>
                    @ViewBag.GenderName
                </dd>

                <dt>
                    Dialekter:
                </dt>

                <dd>
                    @*@foreach (var dialect in Model.Actor.Dialects)
                    {
                        <span>@dialect.DialectName, </span>
                    }*@

                    @Model.ActorDialects
                </dd>

            </dl>
        </div>
        <div class="col-md-4">
            <strong>Kommentar:</strong>
            @Html.DisplayFor(model => model.Actor.Comment)
        </div>
        <div class="col-md-4">
            <img class="img-responsive" src="@Model.Actor.ImgUrl" alt="@Model.Actor.fullName()" />
        </div>

    </div>
    <div class="row">
        @if (Model.Actor.VoiceTests.Count > 0)
        {
            foreach (var file in Model.Actor.VoiceTests)
            {
                <div class="col-md-4 voicetest-box">
                    <p><strong>@file.VoiceTestTitle.ToString()</strong></p>
                    <audio controls>
                        <source src="@file.VoiceTestUrl" type="audio/mp3" />
                    </audio>
                    &nbsp;
                    <a href="/Home/EditVoiceTest/@file.VoiceTestId"><span class="glyphicon glyphicon-pencil"></span></a>
                </div>
            }
        }
        else
        {
            <p>Det er ikke lagt til noen stemmeprøver.</p>
            <p>Legg til noen @Html.ActionLink("her.", "AddAudioFiles", new { id = Model.Actor.ActorId }, new { @class = "btn btn-info" }) </p>
        }

    </div>

</div>
<br />
<p>
    <div class="btn-group" role="group">
        @Html.ActionLink("Tilbake", "Index", null, new { @class = "btn btn-default" })

        @Html.ActionLink("Rediger", "Edit", new { id = Model.Actor.ActorId }, new { @class = "btn btn-success" })

        @Html.ActionLink("Legg til stemmeprøver", "AddAudioFiles", new { id = Model.Actor.ActorId }, new { @class = "btn btn-info" })

        <a class="btn btn-danger" href="javascript:AjaxDelete('@Url.Action("Delete", "Home", new { id = Model.Actor.ActorId})')">Slett skuespiller</a>

    </div>

</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/custom/playOnlyOneAudio.js" type="text/javascript"></script>
    <script>
        //$('video,audio').mediaelementplayer(
        //    {
        //        audioWidth: "100%",
        //        startVolume: 0.8,
        //        pauseOtherPlayers: true,
        //        enableKeyboard: true
        //    }
        //    );


        function AjaxDelete(urlAction) {
            if (confirm("Er du sikker?")) {
                $.ajax({
                    type: "POST", // see http://haacked.com/archive/2009/06/24/json-hijacking.aspx
                    url: urlAction,
                    data: {}, //to send data see more at http://bit.ly/mvc_ajax_jquery
                    datatype: "JSON",
                    contentType: "application/json; charset=utf-8",
                    success: function (returndata) {
                        if (returndata.ok)
                            window.location = returndata.newurl;
                        else
                            window.alert(returndata.message);

                    }
                }
                           );
            }

        }


    </script>
}
