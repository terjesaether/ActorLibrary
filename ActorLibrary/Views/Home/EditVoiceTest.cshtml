@model ActorLibrary.Models.VoiceTest

@{
    ViewBag.Title = "Edit Voice Test";
}

<h2>Edit @ViewBag.ActorName - @Model.VoiceTestTitle</h2>

<h3>@ViewBag.Error</h3>

@using (Html.BeginForm("EditVoiceTest", "Home", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VoiceTestId)

        <div class="form-group">
            @Html.LabelFor(model => model.VoiceTestTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VoiceTestTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VoiceTestTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Lydfil</label>
            <div class="col-md-10">

                <audio controls>
                    <source src="@Model.VoiceTestUrl" />
                </audio>

                <input type="file" name="audioFile" id="audioFile" accept="audio/mp3" />

               @Html.HiddenFor(model => model.VoiceTestUrl)
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Skuespiller</label>
            <div class="col-md-10">
                
                @*@Html.DropDownList("ActorId", null, "Velg sksp ...", htmlAttributes: new { @class = "form-control"})

                @Html.ValidationMessageFor(model => model.ActorId, "", new { @class = "text-danger" })*@

                @Html.HiddenFor(model => model.ActorId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
